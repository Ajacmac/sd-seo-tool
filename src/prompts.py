'''
    This module contains the prompts for the user to interact with the models.

    The idea is that the jobs.py module will be able to string these prompts 
    together in order to create complex chains that can then be called as 
    their a single step.

    This might need to be broken up into submodules:
        - Generators    (to take input data and produce content)
        - Checks        (to take content and check it for certain properties, often scoring it)

    FIXME: Figure out how to handle a job providing which model to use for each prompt
        - a default model should be provided (probably something from groq to save money)
    
    Prompts that Roman is working on (primarily for detailing specific sections of pages)
    will be in the prompt_text directory, which is itself in the root directory of the project.
'''

def hero_section(m_keyword, cta, palette, usp="None") -> str:
    '''
        usp: unique selling point
        m_keyword: main keyword
        

        returns a JSON string with the following structure:
        json_string = {
            "analysis": "text of the analysis done by the model",
            "html": "html generated by the model",
        }
        json.parse()
        results = json.loads(json_string)
        results["analysis"]
        html = results["html"]
    '''
    prompt_text = open("prompt_text/sections/hero_section.md", "r").read()

    prompt_text += f'''\nThe main keyword to focus on is: {m_keyword}'''
    prompt_text += f'''\nThe call to action for this section is: {cta}'''
    prompt_text += f'''\nThe color palete for this section is: {palette}'''

    prompt_text += f'''\nPlease respond with proper html, styled with tailwindcss, to be dropped into our template.'''

    if usp != "None":
        prompt_text += f'''\nThe unique selling point is: {usp}'''

    return prompt_text

def introduction_section() -> str:
    '''
    
    '''
    # prompt_text = 

def features_and_benefits_section() -> str:
    '''
    
    '''
    prompt_text = ''''''

def our_process_section() -> str:
    '''
        
    '''
    prompt_text = ''''''

def why_choose_us_section() -> str:
    '''
     This prompt is written to expect this information:
     - Seling points or benefits form client


    '''
    prompt_text = ''''''

def faq_section(q,e_links,) -> str:
    '''
     Requirements.
     q: questions
     e_links: external links

     This prompt is written to expect this information:
     - list of related questions, it can be from google, question keywords, just questions related to the service generated by ai.
     
     links needed:
     1- 3 external links (cannot be to competitors)

     E.g.

        “What benefits do Canadian employees get?
        Canadian employees benefit from comprehensive group health and dental plans, retirement and pension plans, individual pension plans (IPPs), and a variety of business insurance solutions designed to enhance their financial security and well-being. For more detailed information, visit [Canadian Government website]https://www.canada.ca/en.html“

     If relevant add internal link to contanct form 
     E.g.

        “How do I get started with SaltWinds Financial?
        Getting started is easy. Simply schedule a consultation with our financial advisors. We will discuss your financial goals, assess your current situation, and outline how our services can help you achieve financial success.”


    '''
    prompt_text = ''''''
